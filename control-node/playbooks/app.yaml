---
- name: Configurar servidor de aplicação Java
  hosts: app01
  become: yes
  vars:
    dbhost: "db01"
    dbname: "notes"
    dbusername: "notesapp"
    dbpassword: "devops"

  tasks:
    - name: Configurar hosts lab ansible
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      with_items:
        - "192.168.1.2 control-node"
        - "192.168.1.3 app01"
        - "192.168.1.4 db01"

    - name: Adicionar usuario de app
      user:
        name: app
        comment: "Usuario default da aplicação"
        uid: 5000
        state: present

    - name: Remover versão antiga do Maven
      yum:
        name: maven
        state: absent

    - name: Baixar Maven 3.8.7
      get_url:
        url: "https://archive.apache.org/dist/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz"
        dest: "/tmp/apache-maven-3.8.7-bin.tar.gz"

    - name: Extrair Maven 3.8.7
      unarchive:
        src: "/tmp/apache-maven-3.8.7-bin.tar.gz"
        dest: "/opt/"
        remote_src: yes

    - name: Criar link simbólico para o Maven
      file:
        src: "/opt/apache-maven-3.8.7"
        dest: "/opt/maven"
        state: link

    - name: Configurar variáveis de ambiente do Maven
      lineinfile:
        path: /etc/profile.d/maven.sh
        line: "{{ item }}"
        create: yes
      with_items:
        - 'export M2_HOME=/opt/maven'
        - 'export PATH=$M2_HOME/bin:$PATH'

    - name: Instalar o JDK
      yum:
        name: java-11-openjdk-devel
        state: latest

    - name: Configurar variáveis de ambiente do Java
      lineinfile:
        path: /etc/profile.d/java.sh
        line: "{{ item }}"
        create: yes
      with_items:
        - 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk'
        - 'export PATH=$JAVA_HOME/bin:$PATH'

    - name: Aplicar variáveis de ambiente
      shell: source /etc/profile.d/java.sh
      ignore_errors: yes

    - name: Criação dos diretórios do app
      file:
        path: /opt/notes
        state: directory
        owner: app
        group: app

    - name: Instalacao do git client
      yum:
        name: git
        state: latest

    - name: Clone do repositório notes - app
      git:
        repo: 'https://github.com/callicoder/spring-boot-mysql-rest-api-tutorial.git'
        dest: /opt/notes
        clone: yes
        force: yes

    - name: Configurar arquivo de propriedades para camada de banco de dados
      template:
        src: application.properties
        dest: /opt/notes/src/main/resources/application.properties

    - name: Gerar pacote da aplicação
      command: "/opt/maven/bin/mvn -f /opt/notes/pom.xml package"
      register: mvn_package_result
      failed_when: "'BUILD SUCCESS' not in mvn_package_result.stdout"

    - name: Registrar versao atual do pacote
      command: "/opt/maven/bin/mvn -f /opt/notes/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout"
      args:
        chdir: /opt/notes/
      register: app_version

    - name: Configurar serviço do Systemd
      template:
        src: etc/systemd/system/notes.service
        dest: /etc/systemd/system/notes.service
      notify: 
        - reload daemon

    - name: Inicialização do serviço notes
      service:
        name: notes
        state: restarted

  roles:
    - configuracao-default-so

  handlers:
    - name: Reload do app
      systemd:
        name: 'notes'
        state: restarted
        daemon_reload: yes

    - name: reload daemon
      systemd:
        daemon_reexec: yes
